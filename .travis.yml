dist: focal
language: node_js

sudo: required

# enable c++11/14 builds
addons:
  apt:
    sources:
      - sourceline: "ppa:ubuntu-toolchain-r/test"
    packages:
      - "libstdc++-9-dev"

install:
  # set up the environment by installing mason and clang++
  - ./scripts/setup.sh --config local.env
  # put mason and clang++ on PATH
  - source local.env
  - node -v
  - which node
  - clang++ -v
  - which clang++
  - make ${BUILDTYPE}

osx_image:
  - xcode11

# Build all binaries and if all succeed then publish based on the commit message
jobs:
  include:
    - name: "Build Linux Binary"
      script: 
        - npm run prebuildify -- --platform=linux --arch=x64
        - tar -czvf linux-x64-prebuilds.tar.gz -C prebuilds/linux-x64 .
      workspaces:
        create:
          name: linux-binaries
          paths:
            - linux-x64-prebuilds.tar.gz
      env: BUILDTYPE=release
      node_js: 16
      os: linux

    - name: "Build Darwin Binary"
      script: 
        - npm run prebuildify -- --platform=darwin --arch=x64
        - tar -czvf darwin-x64-prebuilds.tar.gz -C prebuilds/darwin-x64 .
      workspaces:
        create:
          name: osx-binaries
          paths:
            - darwin-x64-prebuilds.tar.gz
      env: BUILDTYPE=release
      node_js: 16
      os: osx

    - stage: Publish Package
      name: "Publish NPM Package"
      workspaces:
        use:
          - linux-binaries
          - osx-binaries
      script:
        - echo "Unpacking from workspaces"
        - ls -l
        - rm -rf prebuilds
        - mkdir prebuilds prebuilds/linux-x64 prebuilds/darwin-x64
        # Extract the prebuilds into the directories
        - tar -xf linux-x64-prebuilds.tar.gz -C prebuilds/linux-x64
        - ls prebuilds
        - tar -xf darwin-x64-prebuilds.tar.gz -C prebuilds/darwin-x64
        - ls prebuilds
        - ls prebuilds/linux-x64
        - ls prebuilds/darwin-x64
      env: BUILDTYPE=release
      node_js: 16
      os: osx
